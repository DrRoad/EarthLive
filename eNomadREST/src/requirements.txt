import tornado.ioloop
import tornado.web
 
class VersionHandler(tornado.web.RequestHandler):
    def get(self):
        response = { 'application': 'eNomad',
                     'version': '3.5.1',
                     'last_build':  date.today().isoformat() }
        self.write(response)

class RainfallHandler(tornado.web.RequestHandler):
    def get(self):
        response = {
            "rainfall" : [
    {
    "timestamp": "201604131602010000",
    "lat": "52.1111",
    "long": "2.6500",
    "precipitation": "21"
  },
  {
    "timestamp": "201604131602020000",
    "lat": "52.2311",
    "long": "2.6500",
    "precipitation": "20"
  },
  {
    "timestamp": "201604131602030000",
    "lat": "52.6511",
    "long": "2.8700",
    "precipitation": "18"
  },
  {
    "timestamp": "201604131602040000",
    "lat": "52.1111",
    "long": "2.4500",
    "precipitation": "25"
  },
  {
    "timestamp": "201604131602050000",
    "lat": "52.1111",
    "long": "2.3000",
    "precipitation": "33"
  }
]}
        self.write(response)
 

application = tornado.web.Application([
    (r"/version", VersionHandler)
    (r"/rainfall", RainfallHandler)
])
 
if __name__ == "__main__":
    application.listen(8888)
    tornado.ioloop.IOLoop.instance().start()